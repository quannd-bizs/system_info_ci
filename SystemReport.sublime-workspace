{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"select",
				"selected"
			],
			[
				"uns",
				"unset"
			],
			[
				"ht",
				"html"
			],
			[
				"sr",
				"script\tTag"
			],
			[
				"SE",
				"SERVER_INFO"
			],
			[
				"G",
				"GetServer"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<?php\ndefined('BASEPATH') OR exit('No direct script access allowed');\n\n//X-Api-Key for Application\t\t\t\t\t16b31a35130b0023a8d49a86551f5bb45a52bf9069bf384\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n//X-Api-Key for Server\t\t\t\t\t9cffbfa5d0abad7dff571e5e05119a921a247bac7f5eeaa\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nclass SystemInfo extends CI_Controller {\n\n\t/**\n\t * Index Page for this controller.\n\t *\n\t * @see https://codeigniter.com/user_guide/general/urls.html\n\t */\n\tpublic function index()\n\t{\n\t\t$this->load->view('welcome_message');\n\t}\n\n\t/**\n\t * Class constructor\n\t *\n\t * @return\tvoid\n\t */\n\tpublic function __construct()\n\t{\n\t\tparent::__construct();\n\t\t$this->load->library('my_common');\n\t\t$this->load->model('dataserver');\n\t}\n\n\t/**\n\t* Insert Server Information into DB\n\t*/\n\tfunction SaveData(){\n\t\t$html = $this->GetServer(1);\n\t\t$ret = (array) json_decode($html, true);\n\t\t$in = $ret[\"servers\"];\n\t\t// var_dump($ret);\n\t\t// $result = array();\n\t\tfor ($i = 0; $i < count($in); $i++) {\n\t\t\t$serverId = array('server_id' => $in[$i][\"id\"]);\n\t\t\t$this->dataserver->SelectServerId($serverId, $result);\n\t\t\tif(isset($in[$i][\"summary\"])){\n\t\t\t\t$serverInfo = $in[$i][\"summary\"];\n\t\t\t\t$serverInfo[\"server_id\"] =  $in[$i][\"id\"];\n\t\t\t\t$serverInfo[\"health_status\"] = $in[$i][\"health_status\"];\n\t\t\t\t$serverInfo[\"last_reported_at\"] = $in[$i][\"last_reported_at\"];\n\t\t\t\t\n\t\t\t\tif(count($result) < 1){\n\t\t\t\t\t$in[$i][\"server_id\"] = $in[$i][\"id\"];\n\t\t\t\t\tunset($in[$i][\"id\"]);\n\t\t\t\t\tunset($in[$i][\"links\"]);\n\t\t\t\t\tunset($in[$i][\"health_status\"]);\n\t\t\t\t\tunset($in[$i][\"summary\"]);\n\t\t\t\t\t$this->dataserver->SaveServerId($in[$i]);\n\t\t\t\t}\n\t\t\t\t$this->dataserver->SaveServerInfo($serverInfo);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* GetServer Information \n\t*/\n\tpublic function GetServer($isShow = Null){\n\n// curl -X GET 'https://api.newrelic.com/v2/servers.json' -H 'X-Api-Key:9cffbfa5d0abad7dff571e5e05119a921a247bac7f5eeaa' -i\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t$curl = curl_init();\n \t$header[0] = \"X-Api-Key: 9cffbfa5d0abad7dff571e5e05119a921a247bac7f5eeaa\";\t\n \t$header[] = \"Content-Type: application/json\";\n \t$header[] = \"Accept-Encoding: gzip, deflate\";\n\n \t$url = 'https://api.newrelic.com/v2/servers.json';\n \tcurl_setopt($curl, CURLOPT_URL, $url);\n \tcurl_setopt($curl, CURLOPT_HTTPHEADER, $header);\n// Will return the response, if false it print the response\n\tif($isShow != Null) {\n\t\tcurl_setopt($curl, CURLOPT_RETURNTRANSFER, true);\n\t}\n\t// Error: \"SSL certificate problem: unable to get local issuer certificate\"\n\t// XXX: This is not a \"fix\" for your problem, this is a work-around.  You \n \t// should fix your local CAs \n     \n    curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);\n\tcurl_setopt($curl, CURLOPT_SSL_VERIFYHOST, 2);\n\tcurl_setopt($curl, CURLOPT_CAINFO, getcwd() . '\\application\\config\\cert_newrelic_base64.cer');\n\n\t$html = curl_exec($curl);\n\t if ($html === false) {\n        // die('error: ' . curl_error($curl));\n        $json = array();\n        $this->my_common->echo_result($json, -100, 'Error: ' . curl_error($curl));\n        exit();\n    }\n    // curl_close($curl);\n    $response = curl_getinfo($curl);\n\n    if($response['http_code'] == 403){\n        // Access Forbidden\n        return -1; \n    }else{\n        return $html;\n           \n    }\n\t}\n}",
			"file": "application/controllers/SystemInfo.php",
			"file_size": 3236,
			"file_write_time": 131414683649918045,
			"settings":
			{
				"buffer_size": 3131,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/models/DataServer.php",
			"settings":
			{
				"buffer_size": 6214,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n\ndefined('BASEPATH') OR exit('No direct script access allowed');\n/*\n *  \n */\nset_error_handler('exceptions_error_handler');\n\nfunction exceptions_error_handler($severity, $message, $filename, $lineno) {\n    if (error_reporting() == 0) {\n        \n    }\n    if (error_reporting() & $severity) {\n        throw new ErrorException($message, 0, $severity, $filename, $lineno);\n    }\n}\n\nrequire_once APPPATH . 'core/MY_ControllerAdmin.php';\n\n//require_once 'KLogger.php';\n\nclass SysInfo_Admin extends MY_ControllerAdmin {\n\n    public $login_name = null;\n    public $imagePath = \"\";\n    protected $reviser = null;\n    protected $pageKey = 1;\n    protected $orderType = \"ASC\";\n\n    public function __construct() {\n        parent::__construct();\n        $this->load->model('SysinfoAdminModel');\n\n        $aryMemberSession = array();\n        $aryMemberSession = $this->session->userdata('member_session');\n        $this->login_name = $aryMemberSession['member_username'];\n\n        /// For sort\n        if (isset($_GET['pageNo'])) {\n            $this->pageKey = $_GET['pageNo'];\n        } else {\n            $this->pageKey = 1;\n        }\n\n        if (isset($_POST['orderType'])) {\n            if ($_POST['orderType'] == \"ASC\") {\n                $this->orderType = \"DESC\";\n            } else {\n                $this->orderType = \"ASC\";\n            }\n        } else {\n            $orderType = \"ASC\";\n        }\n    }\n\n    /**\n     * Default view\n     * \n     * @author : Haimv\n     * @since 2012/02/01\n     */\n    public function index() {\n\n        $aryMemberSession = $this->session->userdata('member_session');\n        if ($aryMemberSession) {\n            redirect(base_url() . 'sysinfo_admin/admin_main_menu');\n        } else {\n            redirect(base_url() . 'sysinfo_admin/logout');\n        }\n    }\n\n    /**\n     * \n     */\n    public function admin_main_menu() {\n        $this->load->view('admin/admin_main_menu');\n    }\n\n    /**\n     * Login screen\n     *\n     */\n    public function admin_login() {\n        $loginData = array();\n        $aryError = array();\n        $loginData = $this->getAllPostParams();\n        $intIsOk = $this->SysinfoAdminModel->selectLoginInfo($loginData, $result);\n        if ($intIsOk == 1 && true == isset($result[0])) {\n            $this->session->set_userdata('member_session', $result[0]);\n            $this->login_name = $result[0]['member_username'];\n        } else {\n            $intIsOk = -2;\n        }\n\n        $aryResult['intIsOk'] = $intIsOk;\n        $aryResult ['strError'] = is_array($aryError) ? join(\"\\n\", $aryError) : (String) $aryError;\n        header(\"Content-Type: text/html; charset=UTF-8\");\n        echo json_encode($aryResult);\n    }\n\n    /**\n     * Logout action\n     *\n     */\n    public function logout() {\n        $this->session->unset_userdata('member_session');\n        $this->session->sess_destroy();\n        $this->load->view('admin/admin_login');\n    }\n\n    /**\n     *\n     * @return boolean \n     */\n    public function checkLogin() {\n        $aryMemberSession = $this->session->userdata('member_session');\n        if ($aryMemberSession) {\n            $this->login_name = $aryMemberSession['member_username'];\n            return true;\n        } else {\n            $this->load->view('admin/admin_login');\n            return false;\n        }\n    }\n\n    public function log_view() {\n//check member session the access data\n        if ($this->checkLogin() == false) {\n            return;\n        }\n\n        $array = array();\n\n//to client\n        $this->SysinfoAdminModel->selectServerInfo($array);\n        $arrayData['user_login'] = $this->login_name;\n        $arrayData['arrayServerId'] = $array;\n        $this->load->view('admin/log_view', $arrayData);\n    }\n\n    /**\n    *\n    */\n public function monitor_list(){\n        $aryData = array();\n        $aryData['user_login'] = $this->login_name;\n        if (isset($_GET['pageNo'])) {\n            $pageKey = $_GET['pageNo'];\n        } else {\n            $pageKey = 1;\n        }\n//order column\n        $aryCondition = array();\n        $aryError = array();\n//get condtion for search\n        $aryCondition = $this->getAllPostParams();\n//get result from search\n        $record_per_page = 100;\n        $intIsOk = $this->SysinfoAdminModel->listInterval($aryCondition, $aryData, $pageKey, $record_per_page);\n//throw client\n        $aryResult = array();\n        $aryResult['strPaging'] = $this->load->view('admin/log_paging', $aryData, true);\n        $aryResult['html'] = $this->load->view('admin/log_list', $aryData, true);\n        $aryResult['intIsOk'] = $intIsOk;\n        echo json_encode($aryResult);\n }\n\n    public function log_search() {\n//check member session the access data\n        $aryData = array();\n        $aryData['user_login'] = $this->login_name;\n        if (isset($_GET['pageNo'])) {\n            $pageKey = $_GET['pageNo'];\n        } else {\n            $pageKey = 1;\n        }\n//order column\n        $aryCondition = array();\n        $aryError = array();\n//get condtion for search\n        $aryCondition = $this->getAllPostParams();\n//get result from search\n        $record_per_page = 100;\n        $intIsOk = $this->SysinfoAdminModel->searchLog($aryCondition, $aryData, $pageKey, $record_per_page);\n//throw client\n        $aryResult = array();\n        $aryResult['strPaging'] = $this->load->view('admin/log_paging', $aryData, true);\n        $aryResult['html'] = $this->load->view('admin/log_list', $aryData, true);\n        $aryResult['intIsOk'] = $intIsOk;\n        echo json_encode($aryResult);\n    }\n\n    /**\n     * Detail log info\n     */\n    public function log_detail() {\n        if ($this->checkLogin() == false) {\n            return;\n        }\n        $intIsOk = self::CI_OK;\n        $aryData = array();\n        $aryLogs = array();\n        $aryData['user_login'] = $this->login_name;\n\n        $id = $this->uri->segment(3, 0);\n        if ($id) {\n            $intIsOk = $this->SysinfoAdminModel->get_log_info($id, $aryLogs);\n            if ($intIsOk == 1) {\n                $aryData['aryLogs'] = $aryLogs[0];\n                $this->load->view('admin/log_detail', $aryData);\n            } else {\n                $this->error_view();\n            }\n        }\n    }\n\n    /**\n     * \n     */\n    public function log_update_status() {\n        if ($this->checkLogin() == false) {\n            return;\n        }\n\n        $aryError = array();\n        $log_id = $_GET['log_id'];\n\n        if ($log_id) {\n            $data = array(\n                'status' => 2\n            );\n            $condition = array('log_id' => $log_id);\n            $intIsOk = $this->SysinfoAdminModel->update(SysInfoAdminModel::TABLE_LOG, $data, $condition);\n            if ($intIsOk == -2) {\n                $aryError[] = 'update error';\n            }\n        } else {\n            $intIsOk = -2;\n            $aryError[] = 'ID not match ';\n        }\n\n        $aryResult = array();\n        $aryResult['intIsOk'] = $intIsOk;\n        $aryResult ['strError'] = is_array($aryError) ? join(\"\\n\", $aryError) : (String) $aryError;\n        header(\"Content-Type: text/html; charset=UTF-8\");\n        echo json_encode($aryResult);\n    }\n\n    /**\n     * view script error dialog\n     * \n     */\n    public function error_view() {\n        header(\"Content-Type: text/html; charset=UTF-8\");\n        echo \"\n                    <script>                        \n                          alert('System Error。');\n                          history.go(-1);\n                    </script>\n                    \";\n    }\n\n}\n",
			"file": "application/controllers/SysInfo_Admin.php",
			"file_size": 7810,
			"file_write_time": 131414710981841342,
			"settings":
			{
				"buffer_size": 7473,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/models/SysInfoAdminModel.php",
			"settings":
			{
				"buffer_size": 8720,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/core/MY_Model.php",
			"settings":
			{
				"buffer_size": 15744,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/admin/log_view.php",
			"settings":
			{
				"buffer_size": 4973,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "www/js/admin/admin.js",
			"settings":
			{
				"buffer_size": 110528,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "application/views/admin/admin_main_menu.php",
			"settings":
			{
				"buffer_size": 5116,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "package",
		"selected_items":
		[
			[
				"package",
				"Package Control: Install Package"
			]
		],
		"width": 512.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/WWW/system_info_ci",
		"/D/WWW/system_info_ci/application",
		"/D/WWW/system_info_ci/application/config",
		"/D/WWW/system_info_ci/application/controllers",
		"/D/WWW/system_info_ci/application/core",
		"/D/WWW/system_info_ci/application/logs",
		"/D/WWW/system_info_ci/application/models",
		"/D/WWW/system_info_ci/application/views",
		"/D/WWW/system_info_ci/application/views/admin"
	],
	"file_history":
	[
		"/D/WWW/system_info_ci/application/views/admin/log_detail.php",
		"/D/WWW/system_info_ci/application/controllers/Test.php",
		"/D/WWW/system_info_ci/application/views/jquery/test.php",
		"/D/WWW/system_info_ci/system/core/compat/mbstring.php",
		"/D/WWW/system_info_ci/system/database/DB_driver.php",
		"/D/WWW/system_info_ci/system/libraries/Session/Session.php",
		"/D/WWW/mmdus/application/models/monter_admin_model.php",
		"/D/WWW/system_info_ci/application/config/config.php",
		"/D/WWW/system_info_ci/application/views/welcome_message.php",
		"/D/WWW/system_info_ci/system/core/Controller.php",
		"/D/WWW/system_info_ci/application/core/MY_ControllerAdmin.php",
		"/D/WWW/system_info_ci/application/core/MY_Model.php",
		"/D/WWW/system_info_ci/system/database/DB_query_builder.php",
		"/D/WWW/system_info_ci/application/models/SysInfo_Admin_Model.php",
		"/D/WWW/mmdus/application/models/monster_report_model.php",
		"/D/WWW/system_info_ci/application/controllers/MY_ControllerAdmin.php",
		"/D/WWW/system/application/config/database.php",
		"/D/WWW/system/application/libraries/common.php",
		"/D/WWW/system/application/views/welcome_message.php",
		"/D/WWW/system/system/core/Controller.php"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"D:\\WWW\\system_info_ci\\application\\views\\admin"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"server_id",
			"serverInfo",
			"memc",
			"          \n",
			"//        var_dump($aryCondition);",
			"form",
			"<? echo base_url(); ?>",
			"<?",
			"<?php",
			"<?",
			"add_date",
			"function add_date",
			"add_date",
			"    \n",
			"curl",
			"16b31a35130b0023a8d49a86551f5bb45a52bf9069bf384"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "application/controllers/SystemInfo.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3131,
						"regions":
						{
						},
						"selection":
						[
							[
								3126,
								3126
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 594.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "application/models/DataServer.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6214,
						"regions":
						{
						},
						"selection":
						[
							[
								752,
								752
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "application/controllers/SysInfo_Admin.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7473,
						"regions":
						{
						},
						"selection":
						[
							[
								3536,
								3536
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2264.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "application/models/SysInfoAdminModel.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8720,
						"regions":
						{
						},
						"selection":
						[
							[
								1685,
								1685
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 842.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "application/core/MY_Model.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15744,
						"regions":
						{
						},
						"selection":
						[
							[
								833,
								833
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "application/views/admin/log_view.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4973,
						"regions":
						{
						},
						"selection":
						[
							[
								1279,
								1279
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 190.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "www/js/admin/admin.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 110528,
						"regions":
						{
						},
						"selection":
						[
							[
								105540,
								105540
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 49184.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "application/views/admin/admin_main_menu.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5116,
						"regions":
						{
						},
						"selection":
						[
							[
								4919,
								4919
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 234.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 34.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "SystemReport.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\WWW\\system\\SystemReport.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 263.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
